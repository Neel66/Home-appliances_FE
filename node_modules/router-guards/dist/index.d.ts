import * as React from 'react';
import { RouteComponentProps } from 'react-router';
export declare type Route<Ctx> = SimpleRoute<Ctx> | NestedRoute<Ctx>;
declare type SimpleRoute<Ctx> = {
    name?: string;
    path?: string;
    exact?: boolean;
    component: React.ComponentType<RouteComponentProps>;
    guards?: Guard<Ctx>[];
};
declare type NestedRoute<Ctx> = {
    name?: string;
    path?: string;
    exact?: boolean;
    component: React.ComponentType<RouteComponentProps>;
    routes: Route<Ctx>[];
    guards?: Guard<Ctx>[];
};
export declare type Guard<Ctx> = (route: Route<Ctx> | null, context: Ctx) => Route<Ctx> | null | undefined;
export declare function compileGuard<Ctx>(route: Route<Ctx>, context: Ctx): Route<Ctx> | null;
declare type ObjectRoutes<Ctx> = {
    [key: string]: Route<Ctx>;
};
export declare function renderRoutes<Ctx>(config: Route<Ctx>[] | ObjectRoutes<Ctx>, context: Ctx): Route<Ctx>[];
export {};
